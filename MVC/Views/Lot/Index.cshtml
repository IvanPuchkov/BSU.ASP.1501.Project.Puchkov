@model MVC.Models.LotSearchViewModel
@{
    ViewBag.Title = "Index";
}
<script>
    function SaveSearchRequest() {
        window.SearchStringVariable = document.getElementById('SearchString').value;
        window.SearchInNameVariable = document.getElementById('SearchInName').checked;
    }
    
</script>
<script type="text/javascript">
    
    $(document).on("click", ".page-number", function () {
            
        var page = parseInt($(this).html());
        
        if (window.SearchStringVariable === undefined)
        { window.SearchStringVariable = ""; }
        if (window.SearchInNameVariable === undefined)
            window.SearchInNameVariable = true;

                    $.ajax({
                type: 'POST',
                async:true,
                url: '@Url.Action("LotList")',
                data: 'page=' + page + '&SearchString=' + SearchStringVariable + '&SearchInName=' + SearchInNameVariable,
                datatype: "html",
                success: function (data) {
                    $("#content").html(data);
                }
            });
        });
    
</script>
@if (ViewBag.AutorizedAndNotBanned)
{
    @Html.ActionLink("Crete new Lot", "Create")
}
@{
    using (Ajax.BeginForm("LotList", new AjaxOptions() { UpdateTargetId = "content", HttpMethod = "Post", OnBegin = "SaveSearchRequest()"}))
    {
        <br />
        @Html.LabelFor(x => x.SearchString)
        <br />
        @Html.TextBoxFor(y => y.SearchString,new {id="SearchString"})
        <br />
        <span>@Html.RadioButtonFor(x => x.SearchInName, "true",new {id="SearchInName"})Search in name</span>
        <span>@Html.RadioButtonFor(x => x.SearchInName, "false")Search in description</span>
        <br />
        <input type="submit" value="Submit" />
    }
}

<div id="content">
    @Html.Action("LotList",new {page=1})
</div>

@Scripts.Render("~/scripts/jquery-1.10.2.min.js")
@Scripts.Render("~/scripts/jquery.unobtrusive-ajax.min.js")
